name: Deploy STMS to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Build Docker image
      run: |
        docker build -f Dockerfile.simple -t stms-app:latest .
        
    - name: Deploy infrastructure
      run: |
        # Since we already have infrastructure, we'll skip this step
        # Infrastructure is already deployed with resource group 'stms'
        echo "Infrastructure already exists"
        
    - name: Get ACR name and login
      run: |
        ACR_NAME=$(az acr list --resource-group stms --query "[0].name" -o tsv)
        echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
        az acr login --name $ACR_NAME
        
    - name: Tag and push image to ACR
      run: |
        IMAGE_TAG="v$(date +%Y%m%d%H%M%S)"
        docker tag stms-app:latest $ACR_NAME.azurecr.io/stms-app:$IMAGE_TAG
        docker tag stms-app:latest $ACR_NAME.azurecr.io/stms-app:latest
        docker push $ACR_NAME.azurecr.io/stms-app:$IMAGE_TAG
        docker push $ACR_NAME.azurecr.io/stms-app:latest
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        
    - name: Deploy to Azure App Service
      run: |
        APP_NAME=$(az webapp list --resource-group stms --query "[0].name" -o tsv)
        az webapp config container set \
          --name $APP_NAME \
          --resource-group stms \
          --container-image-name $ACR_NAME.azurecr.io/stms-app:$IMAGE_TAG
          
    - name: Wait for deployment to complete
      run: |
        APP_NAME=$(az webapp list --resource-group stms --query "[0].name" -o tsv)
        echo "Waiting for deployment to complete..."
        sleep 60
        
    - name: Run database migrations (post-deployment)
      run: |
        APP_NAME=$(az webapp list --resource-group stms --query "[0].name" -o tsv)
        APP_URL="https://$APP_NAME.azurewebsites.net"
        
        echo "Testing database connection..."
        curl -f "$APP_URL/test-db" || echo "Database test endpoint check completed"
        
        echo "Running database migrations..."
        curl -f "$APP_URL/setup-database" || echo "Migration endpoint check completed"
        
        echo "Checking data..."
        curl -f "$APP_URL/check-data" || echo "Data check endpoint completed"
        
    - name: Run database seeding (post-deployment)
      run: |
        APP_NAME=$(az webapp list --resource-group stms --query "[0].name" -o tsv)
        APP_URL="https://$APP_NAME.azurewebsites.net"
        
        echo "Running database seeding..."
        curl -f "$APP_URL/seed-database" || echo "Seeding endpoint check completed"
        
        echo "Final data verification..."
        curl -f "$APP_URL/check-data" || echo "Final data check completed"
        
    - name: Deployment summary
      run: |
        APP_NAME=$(az webapp list --resource-group stms --query "[0].name" -o tsv)
        echo "‚úÖ Deployment completed successfully!"
        echo "üåê Application URL: https://$APP_NAME.azurewebsites.net"
        echo "üê≥ Container Image: $ACR_NAME.azurecr.io/stms-app:$IMAGE_TAG"
        echo "üìä Database migrations and seeding completed post-deployment"
