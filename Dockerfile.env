FROM php:8.3-fpm

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libxml2-dev \
    libzip-dev \
    libonig-dev \
    zip \
    unzip \
    nginx \
    supervisor \
    nodejs \
    npm

# Configure and install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-install pdo_mysql mbstring xml zip opcache

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www/html

# Copy application code
COPY . .

# Install dependencies
RUN composer install --optimize-autoloader --no-interaction
RUN npm ci && npm run build && npm prune --production

# Set permissions
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html/storage \
    && chmod -R 755 /var/www/html/bootstrap/cache

# Setup nginx and php-fpm
RUN mkdir -p /var/log/nginx /tmp \
    && chown -R www-data:www-data /var/log/nginx

# Copy configuration files
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/php-fpm.conf /usr/local/etc/php-fpm.d/www.conf
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Create startup script with .env generation
RUN echo '#!/bin/bash' > /startup.sh && \
    echo 'set -e' >> /startup.sh && \
    echo 'echo "Creating .env file..."' >> /startup.sh && \
    echo 'cat > /var/www/html/.env << EOL' >> /startup.sh && \
    echo 'APP_NAME=STMS' >> /startup.sh && \
    echo 'APP_ENV=${APP_ENV:-production}' >> /startup.sh && \
    echo 'APP_KEY=${APP_KEY}' >> /startup.sh && \
    echo 'APP_DEBUG=${APP_DEBUG:-false}' >> /startup.sh && \
    echo 'APP_URL=${APP_URL:-https://stms-app.azurewebsites.net}' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo 'DB_CONNECTION=${DB_CONNECTION:-mysql}' >> /startup.sh && \
    echo 'DB_HOST=${DB_HOST}' >> /startup.sh && \
    echo 'DB_PORT=${DB_PORT:-3306}' >> /startup.sh && \
    echo 'DB_DATABASE=${DB_DATABASE}' >> /startup.sh && \
    echo 'DB_USERNAME=${DB_USERNAME}' >> /startup.sh && \
    echo 'DB_PASSWORD=${DB_PASSWORD}' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo 'CACHE_DRIVER=${CACHE_DRIVER:-file}' >> /startup.sh && \
    echo 'SESSION_DRIVER=${SESSION_DRIVER:-file}' >> /startup.sh && \
    echo 'QUEUE_CONNECTION=${QUEUE_CONNECTION:-sync}' >> /startup.sh && \
    echo 'EOL' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo 'echo ".env created successfully"' >> /startup.sh && \
    echo 'echo "Starting services..."' >> /startup.sh && \
    echo 'exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf' >> /startup.sh && \
    chmod +x /startup.sh

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Start with our custom startup script
CMD ["/startup.sh"]
