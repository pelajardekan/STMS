FROM php:8.3-fpm

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libxml2-dev \
    libzip-dev \
    libonig-dev \
    zip \
    unzip \
    nginx \
    supervisor \
    nodejs \
    npm \
    default-mysql-client \
    ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Configure and install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-install pdo_mysql mbstring xml zip opcache exif pcntl bcmath

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www/html

# Copy composer files first for better layer caching
COPY composer.json composer.lock ./

# Install PHP dependencies
RUN composer install --no-dev --optimize-autoloader --no-interaction --no-scripts

# Copy package files for frontend dependencies
COPY package*.json ./
RUN npm ci

# Copy application code
COPY . .

# Build frontend assets
RUN npm run build

# Clean up node_modules to reduce image size
RUN rm -rf node_modules

# Run Laravel post-install scripts
RUN composer run-script post-autoload-dump

# Set permissions
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html/storage \
    && chmod -R 755 /var/www/html/bootstrap/cache \
    && chmod 755 /var/www/html/artisan

# Setup nginx and php-fpm
RUN mkdir -p /var/log/nginx /tmp /run/nginx \
    && chown -R www-data:www-data /var/log/nginx \
    && touch /var/log/nginx/access.log /var/log/nginx/error.log \
    && chown www-data:www-data /var/log/nginx/access.log /var/log/nginx/error.log

# Copy configuration files
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/php-fpm.conf /usr/local/etc/php-fpm.d/www.conf
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Create startup script with proper Azure environment handling
RUN echo '#!/bin/bash' > /startup.sh && \
    echo 'set -e' >> /startup.sh && \
    echo 'echo "Starting STMS application..."' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo '# Create .env file from environment variables' >> /startup.sh && \
    echo 'echo "Creating .env file from environment variables..."' >> /startup.sh && \
    echo 'cat > /var/www/html/.env << EOL' >> /startup.sh && \
    echo 'APP_NAME=${APP_NAME:-STMS}' >> /startup.sh && \
    echo 'APP_ENV=${APP_ENV:-production}' >> /startup.sh && \
    echo 'APP_KEY=${APP_KEY}' >> /startup.sh && \
    echo 'APP_DEBUG=${APP_DEBUG:-false}' >> /startup.sh && \
    echo 'APP_URL=${APP_URL:-https://localhost}' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo 'LOG_CHANNEL=${LOG_CHANNEL:-stack}' >> /startup.sh && \
    echo 'LOG_LEVEL=${LOG_LEVEL:-error}' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo 'DB_CONNECTION=${DB_CONNECTION:-mysql}' >> /startup.sh && \
    echo 'DB_HOST=${DB_HOST}' >> /startup.sh && \
    echo 'DB_PORT=${DB_PORT:-3306}' >> /startup.sh && \
    echo 'DB_DATABASE=${DB_DATABASE}' >> /startup.sh && \
    echo 'DB_USERNAME=${DB_USERNAME}' >> /startup.sh && \
    echo 'DB_PASSWORD=${DB_PASSWORD}' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo 'BROADCAST_DRIVER=${BROADCAST_DRIVER:-log}' >> /startup.sh && \
    echo 'CACHE_DRIVER=${CACHE_DRIVER:-file}' >> /startup.sh && \
    echo 'FILESYSTEM_DISK=${FILESYSTEM_DISK:-local}' >> /startup.sh && \
    echo 'QUEUE_CONNECTION=${QUEUE_CONNECTION:-sync}' >> /startup.sh && \
    echo 'SESSION_DRIVER=${SESSION_DRIVER:-file}' >> /startup.sh && \
    echo 'SESSION_LIFETIME=${SESSION_LIFETIME:-120}' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo 'MAIL_MAILER=${MAIL_MAILER:-log}' >> /startup.sh && \
    echo 'EOL' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo '# Generate Laravel application key if not set' >> /startup.sh && \
    echo 'if [ -z "$APP_KEY" ] || [ "$APP_KEY" = "" ]; then' >> /startup.sh && \
    echo '  echo "Generating Laravel application key..."' >> /startup.sh && \
    echo '  php artisan key:generate --force' >> /startup.sh && \
    echo 'fi' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo '# Clear Laravel caches to avoid stale service provider references' >> /startup.sh && \
    echo 'php artisan config:clear || true' >> /startup.sh && \
    echo 'php artisan cache:clear || true' >> /startup.sh && \
    echo 'php artisan route:clear || true' >> /startup.sh && \
    echo 'php artisan view:clear || true' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo '# Wait for database to be ready and run migrations' >> /startup.sh && \
    echo 'if [ "$DB_CONNECTION" = "mysql" ] && [ -n "$DB_HOST" ]; then' >> /startup.sh && \
    echo '  echo "Waiting for database connection..."' >> /startup.sh && \
    echo '  max_attempts=30' >> /startup.sh && \
    echo '  attempt=1' >> /startup.sh && \
    echo '  while [ $attempt -le $max_attempts ]; do' >> /startup.sh && \
    echo '    if mysql -h"$DB_HOST" -P"$DB_PORT" -u"$DB_USERNAME" -p"$DB_PASSWORD" -e "SELECT 1" >/dev/null 2>&1; then' >> /startup.sh && \
    echo '      echo "Database connection established!"' >> /startup.sh && \
    echo '      break' >> /startup.sh && \
    echo '    else' >> /startup.sh && \
    echo '      echo "Database connection attempt $attempt/$max_attempts failed, waiting..."' >> /startup.sh && \
    echo '      sleep 10' >> /startup.sh && \
    echo '      attempt=$((attempt + 1))' >> /startup.sh && \
    echo '    fi' >> /startup.sh && \
    echo '  done' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo '  if [ $attempt -le $max_attempts ]; then' >> /startup.sh && \
    echo '    echo "Running database migrations..."' >> /startup.sh && \
    echo '    php artisan migrate --force' >> /startup.sh && \
    echo '    echo "Running database seeders..."' >> /startup.sh && \
    echo '    php artisan db:seed --force --class=AdminUserSeeder || true' >> /startup.sh && \
    echo '    echo "Database setup completed."' >> /startup.sh && \
    echo '  else' >> /startup.sh && \
    echo '    echo "Could not connect to database, continuing without migration..."' >> /startup.sh && \
    echo '  fi' >> /startup.sh && \
    echo 'fi' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo '# Optimize Laravel for production' >> /startup.sh && \
    echo 'echo "Optimizing Laravel caches..."' >> /startup.sh && \
    echo 'php artisan config:cache' >> /startup.sh && \
    echo 'php artisan route:cache' >> /startup.sh && \
    echo 'php artisan view:cache' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo '# Test configurations before starting services' >> /startup.sh && \
    echo 'echo "Testing configurations..."' >> /startup.sh && \
    echo 'nginx -t || exit 1' >> /startup.sh && \
    echo 'php-fpm -t || exit 1' >> /startup.sh && \
    echo '' >> /startup.sh && \
    echo 'echo "Starting services..."' >> /startup.sh && \
    echo 'exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf' >> /startup.sh && \
    chmod +x /startup.sh

# Expose port 8080
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Start with our custom startup script
CMD ["/startup.sh"]
